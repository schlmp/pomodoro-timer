{"version":3,"sources":["TimerButton.js","audio/bell.mp3","PomodoroApp.js","index.js"],"names":["TimerButton","props","handleClick","bind","this","disabled","className","onClick","text","Component","PomodoroApp","state","seconds","intervalName","play","setWorkInterval","setInterval","name","sec","setShortBreakInterval","setLongBreakInterval","playPause","interval","setState","sound","pause","currentTime","clearInterval","tick","mins","Math","floor","secs","Audio","bell","isPlaying","timestamp","formatTime","document","title","ReactDOM","render","StrictMode","getElementById"],"mappings":"2RAGqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFJ,E,+CAMnB,WACIC,KAAKH,MAAMC,gB,oBAGf,WACI,OACI,wBAAQG,SAAUD,KAAKH,MAAMI,SAAUC,UAAU,cAAcC,QAASH,KAAKF,YAA7E,SACKE,KAAKH,MAAMO,W,GAdaC,aCH1B,G,MAAA,IAA0B,kCCkG1BC,E,kDA5FX,WAAYT,GAAQ,IAAD,8BACf,cAAMA,IACDU,MAAQ,CACTC,QAAS,KACTC,aAAc,OACdC,MAAM,GAGV,EAAKC,gBAAkB,EAAKC,YAAYb,KAAjB,eAA4B,CAACc,KAAM,OAAQC,IAAI,OACtE,EAAKC,sBAAwB,EAAKH,YAAYb,KAAjB,eAA4B,CAACc,KAAM,cAAeC,IAAI,MACnF,EAAKE,qBAAuB,EAAKJ,YAAYb,KAAjB,eAA4B,CAACc,KAAM,aAAcC,IAAI,OACjF,EAAKG,UAAY,EAAKA,UAAUlB,KAAf,gBAXF,E,+CAcnB,SAAYmB,GACRlB,KAAKmB,UAAS,SAAAZ,GAAK,MAAK,CACpBC,QAASU,EAASJ,IAClBL,aAAcS,EAASL,SAE3Bb,KAAKoB,MAAMC,QACXrB,KAAKoB,MAAME,YAAc,I,uBAI7B,WAAa,IAAD,OACLtB,KAAKO,MAAMG,MACVV,KAAKmB,UAAS,SAAAZ,GAAK,MAAK,CACpBG,MAAM,MAEVa,cAAcvB,KAAKkB,YAEnBlB,KAAKmB,UAAS,SAAAZ,GAAK,MAAK,CACpBG,MAAM,MAEVV,KAAKkB,SAAWN,aAAY,kBAAM,EAAKY,SAAQ,Q,kBAIvD,WAAQ,IAAD,OACHxB,KAAKmB,UAAS,SAAAZ,GAAK,MAAK,CAACC,QAAS,EAAKD,MAAMC,QAAQ,MAEjDR,KAAKO,MAAMC,SAAW,IACtBe,cAAcvB,KAAKkB,UACnBlB,KAAKmB,UAAS,SAAAZ,GAAK,MAAK,CACpBG,MAAM,MAEVV,KAAKoB,MAAMV,U,wBAInB,SAAWF,GACP,IAAIiB,EAAOC,KAAKC,MAAMnB,EAAU,IAC5BoB,EAAOpB,EAAU,GAGrB,OAFIiB,EAAO,KAAIA,EAAO,IAAMA,GACxBG,EAAO,KAAIA,EAAO,IAAMA,GACrBH,EAAO,IAAMG,I,+BAGxB,WAAqB,IAAD,OAChB5B,KAAKkB,SAAWN,aAAY,kBAAM,EAAKY,SAAQ,KAC/CxB,KAAKoB,MAAQ,IAAIS,MAAMC,K,kCAG3B,WACIP,cAAcvB,KAAKkB,Y,oBAGvB,WACI,IAAMV,EAAUR,KAAKO,MAAMC,QACrBuB,EAAY/B,KAAKO,MAAMG,KACvBD,EAAeT,KAAKO,MAAME,aAC1BuB,EAAYhC,KAAKiC,WAAWzB,GAIlC,OAFA0B,SAASC,MAAQH,EAAY,YAGzB,sBAAK9B,UAAU,cAAf,UACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BO,IAC/B,qBAAKP,UAAU,YAAf,SAA4B8B,OAEhC,sBAAK9B,UAAU,WAAf,UACI,cAAC,EAAD,CAAaD,SAAUO,GAAW,EAAGJ,KAAM2B,EAAY,QAAU,OAAQjC,YAAaE,KAAKiB,YAC3F,cAAC,EAAD,CAAab,KAAK,UAAUN,YAAaE,KAAKW,kBAC9C,cAAC,EAAD,CAAaP,KAAK,SAASN,YAAaE,KAAKe,wBAC7C,cAAC,EAAD,CAAaX,KAAK,UAAUN,YAAaE,KAAKgB,iC,GAtFxCX,aCA1B+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFJ,SAASK,eAAe,W","file":"static/js/main.26930f7a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TimerButton.css'\r\n\r\nexport default class TimerButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    \r\n\r\n    handleClick() {\r\n        this.props.handleClick();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <button disabled={this.props.disabled} className=\"TimerButton\" onClick={this.handleClick}>\r\n                {this.props.text}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/bell.ddf1e098.mp3\";","import React, { Component } from 'react';\r\nimport TimerButton from './TimerButton';\r\nimport './PomodoroApp.css'\r\nimport bell from './audio/bell.mp3';\r\n\r\nclass PomodoroApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            seconds: 25*60,\r\n            intervalName: \"Work\",\r\n            play: true\r\n        };\r\n\r\n        this.setWorkInterval = this.setInterval.bind(this, {name: \"Work\", sec:25*60});\r\n        this.setShortBreakInterval = this.setInterval.bind(this, {name: \"Short Break\", sec:5*60});\r\n        this.setLongBreakInterval = this.setInterval.bind(this, {name: \"Long Break\", sec:20*60});\r\n        this.playPause = this.playPause.bind(this);\r\n    }\r\n\r\n    setInterval(interval) {\r\n        this.setState(state => ({\r\n            seconds: interval.sec,\r\n            intervalName: interval.name\r\n        }));\r\n        this.sound.pause();\r\n        this.sound.currentTime = 0;\r\n    }\r\n\r\n\r\n    playPause() {\r\n        if(this.state.play) {\r\n            this.setState(state => ({\r\n                play: false\r\n            }));\r\n            clearInterval(this.interval);\r\n        } else {\r\n            this.setState(state => ({\r\n                play: true\r\n            }));\r\n            this.interval = setInterval(() => this.tick(), 1000);\r\n        }\r\n    }\r\n\r\n    tick() {\r\n        this.setState(state => ({seconds: this.state.seconds-1}))\r\n\r\n        if (this.state.seconds <= 0) {\r\n            clearInterval(this.interval);\r\n            this.setState(state => ({\r\n                play: false\r\n            }));\r\n            this.sound.play();\r\n        }\r\n    }\r\n\r\n    formatTime(seconds) {\r\n        let mins = Math.floor(seconds / 60);\r\n        let secs = seconds % 60;\r\n        if (mins < 10) mins = \"0\" + mins;\r\n        if (secs < 10) secs = \"0\" + secs;\r\n        return mins + \":\" + secs;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n        this.sound = new Audio(bell);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n    \r\n    render() {\r\n        const seconds = this.state.seconds;\r\n        const isPlaying = this.state.play;\r\n        const intervalName = this.state.intervalName;\r\n        const timestamp = this.formatTime(seconds)\r\n\r\n        document.title = timestamp + \" Pomodoro\";\r\n\r\n        return (\r\n            <div className=\"PomodoroApp\">\r\n                <div className=\"Timer\">\r\n                    <div className=\"IntervalName\">{intervalName}</div>\r\n                    <div className=\"Timestamp\">{timestamp}</div>\r\n                </div>\r\n                <div className=\"Controls\">\r\n                    <TimerButton disabled={seconds <= 0} text={isPlaying ? \"Pause\" : \"Play\"} handleClick={this.playPause}/>\r\n                    <TimerButton text=\"25 Min.\" handleClick={this.setWorkInterval}/>\r\n                    <TimerButton text=\"5 Min.\" handleClick={this.setShortBreakInterval}/>\r\n                    <TimerButton text=\"20 Min.\" handleClick={this.setLongBreakInterval}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PomodoroApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PomodoroApp from './PomodoroApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PomodoroApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}